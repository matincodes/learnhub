/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PricingImport } from './routes/pricing'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardSearchImport } from './routes/dashboard/search'
import { Route as DashboardProfileImport } from './routes/dashboard/profile'
import { Route as DashboardNotificationsImport } from './routes/dashboard/notifications'
import { Route as DashboardMyCoursesImport } from './routes/dashboard/my-courses'
import { Route as DashboardLeaderboardImport } from './routes/dashboard/leaderboard'
import { Route as DashboardAnalyticsImport } from './routes/dashboard/analytics'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as DashboardQuizzesIndexImport } from './routes/dashboard/quizzes/index'
import { Route as DashboardQuizzesIdImport } from './routes/dashboard/quizzes/$id'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const PricingRoute = PricingImport.update({
  path: '/pricing',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSearchRoute = DashboardSearchImport.update({
  path: '/search',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardProfileRoute = DashboardProfileImport.update({
  path: '/profile',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardNotificationsRoute = DashboardNotificationsImport.update({
  path: '/notifications',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardMyCoursesRoute = DashboardMyCoursesImport.update({
  path: '/my-courses',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardLeaderboardRoute = DashboardLeaderboardImport.update({
  path: '/leaderboard',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAnalyticsRoute = DashboardAnalyticsImport.update({
  path: '/analytics',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardQuizzesIndexRoute = DashboardQuizzesIndexImport.update({
  path: '/quizzes/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardQuizzesIdRoute = DashboardQuizzesIdImport.update({
  path: '/quizzes/$id',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/analytics': {
      id: '/dashboard/analytics'
      path: '/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof DashboardAnalyticsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/leaderboard': {
      id: '/dashboard/leaderboard'
      path: '/leaderboard'
      fullPath: '/dashboard/leaderboard'
      preLoaderRoute: typeof DashboardLeaderboardImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/my-courses': {
      id: '/dashboard/my-courses'
      path: '/my-courses'
      fullPath: '/dashboard/my-courses'
      preLoaderRoute: typeof DashboardMyCoursesImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/notifications': {
      id: '/dashboard/notifications'
      path: '/notifications'
      fullPath: '/dashboard/notifications'
      preLoaderRoute: typeof DashboardNotificationsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/profile': {
      id: '/dashboard/profile'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/search': {
      id: '/dashboard/search'
      path: '/search'
      fullPath: '/dashboard/search'
      preLoaderRoute: typeof DashboardSearchImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/quizzes/$id': {
      id: '/dashboard/quizzes/$id'
      path: '/quizzes/$id'
      fullPath: '/dashboard/quizzes/$id'
      preLoaderRoute: typeof DashboardQuizzesIdImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/quizzes/': {
      id: '/dashboard/quizzes/'
      path: '/quizzes'
      fullPath: '/dashboard/quizzes'
      preLoaderRoute: typeof DashboardQuizzesIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  DashboardRoute: DashboardRoute.addChildren({
    DashboardAnalyticsRoute,
    DashboardLeaderboardRoute,
    DashboardMyCoursesRoute,
    DashboardNotificationsRoute,
    DashboardProfileRoute,
    DashboardSearchRoute,
    DashboardIndexRoute,
    DashboardQuizzesIdRoute,
    DashboardQuizzesIndexRoute,
  }),
  PricingRoute,
  AuthLoginRoute,
  AuthSignupRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/dashboard",
        "/pricing",
        "/_auth/login",
        "/_auth/signup"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/dashboard": {
      "filePath": "dashboard.jsx",
      "children": [
        "/dashboard/analytics",
        "/dashboard/leaderboard",
        "/dashboard/my-courses",
        "/dashboard/notifications",
        "/dashboard/profile",
        "/dashboard/search",
        "/dashboard/",
        "/dashboard/quizzes/$id",
        "/dashboard/quizzes/"
      ]
    },
    "/pricing": {
      "filePath": "pricing.jsx"
    },
    "/_auth/login": {
      "filePath": "_auth/login.jsx"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.jsx"
    },
    "/dashboard/analytics": {
      "filePath": "dashboard/analytics.jsx",
      "parent": "/dashboard"
    },
    "/dashboard/leaderboard": {
      "filePath": "dashboard/leaderboard.jsx",
      "parent": "/dashboard"
    },
    "/dashboard/my-courses": {
      "filePath": "dashboard/my-courses.jsx",
      "parent": "/dashboard"
    },
    "/dashboard/notifications": {
      "filePath": "dashboard/notifications.jsx",
      "parent": "/dashboard"
    },
    "/dashboard/profile": {
      "filePath": "dashboard/profile.jsx",
      "parent": "/dashboard"
    },
    "/dashboard/search": {
      "filePath": "dashboard/search.jsx",
      "parent": "/dashboard"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.jsx",
      "parent": "/dashboard"
    },
    "/dashboard/quizzes/$id": {
      "filePath": "dashboard/quizzes/$id.jsx",
      "parent": "/dashboard"
    },
    "/dashboard/quizzes/": {
      "filePath": "dashboard/quizzes/index.jsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
